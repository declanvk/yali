(function() {var implementors = {};
implementors["walox"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/ast/enum.BinaryOpKind.html\" title=\"enum walox::ast::BinaryOpKind\">BinaryOpKind</a>","synthetic":false,"types":["walox::ast::expr::BinaryOpKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/ast/enum.UnaryOpKind.html\" title=\"enum walox::ast::UnaryOpKind\">UnaryOpKind</a>","synthetic":false,"types":["walox::ast::expr::UnaryOpKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/ast/enum.LogicalOpKind.html\" title=\"enum walox::ast::LogicalOpKind\">LogicalOpKind</a>","synthetic":false,"types":["walox::ast::expr::LogicalOpKind"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/compiler/enum.Precedence.html\" title=\"enum walox::compiler::Precedence\">Precedence</a>","synthetic":false,"types":["walox::compiler::precedence::Precedence"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/scanner/enum.TokenType.html\" title=\"enum walox::scanner::TokenType\">TokenType</a>","synthetic":false,"types":["walox::scanner::TokenType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"walox/span/struct.Span.html\" title=\"struct walox::span::Span\">Span</a>","synthetic":false,"types":["walox::span::Span"]},{"text":"impl&lt;'d&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"walox/vm/struct.Instruction.html\" title=\"struct walox::vm::Instruction\">Instruction</a>&lt;'d&gt;","synthetic":false,"types":["walox::vm::op::Instruction"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"walox/vm/enum.OpCode.html\" title=\"enum walox::vm::OpCode\">OpCode</a>","synthetic":false,"types":["walox::vm::op::OpCode"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()