initSidebarItems({"enum":[["CompilerError","Errors that occur during the course of parsing and emitting bytecode."],["Precedence","A relative measure of priority used while parsing."],["VariableRef","A reference to a variable, either global or local."]],"fn":[["and","Attempt to parse an “and” logical infix expression."],["binary","Attempt to compile a binary operation, having observed a requisite starting token."],["block_statement","Compile an block statement"],["compile","Compile `lox` source"],["declaration","Compile a declaration."],["expression","Compile an expression."],["grouping","Attempt to compile a grouped expression, having already observed a `(` token."],["if_statement","Attempt to compile an if statement"],["literal","Attempt to compile a literal (boolean or nil) expression, having already observed a literal (boolean or nil) token."],["number","Attempt to compile a numeric literal, having already observed a `Number` token."],["or","Attempt to parse an “or” logical infix expression."],["parse_precedence","Parse the next token, dispatching to a more specific parse rule based on the `TokenType` and the `Precedence` given."],["print_statement","Attempt to compile a print statement."],["statement","Compile a statement."],["string","Attempt to parse a string expression, having observed a string token."],["unary","Attempt to compile a unary operation, having already observed a `-` or `!` token."]],"struct":[["Compiler","A single-pass compiler into `lox` bytecode."],["LocalVariable","A record of a compiled local variable"],["ParseRule","A rule for parsing in the case of a specific `TokenType`."]]});