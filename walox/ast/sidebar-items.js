initSidebarItems({"enum":[["BinaryOpKind","Different types of binary operations"],["ConversionError","Errors that occur when converting to AST elements"],["ExprKind","Different types of expressions"],["LiteralExpr","A literal value"],["LogicalOpKind","Different types of logical operations"],["StatementKind","Different types of statements"],["UnaryOpKind","Different types of unary operations"]],"mod":[["printer","An implementation of a `Visitor` which prints the structure of the AST"],["visit","Implementation of the visitor pattern for the AST data structure"]],"struct":[["AssignExpr","An assignment to an existing variable"],["BinaryExpr","A binary operation"],["BlockStatement","A block statement contains a list of other statements and defines a new lexical scope"],["CallExpr","An expression that calls a function with the supplied arguments"],["ClassDeclaration","A class declaration defines the methods of a new class with the given name."],["Expr","Syntax tree of a lox expression"],["ExprStatement","A statement consisting a single expression followed by a semicolon"],["FunctionDeclaration","A function declaration defines the arguments and body of a user-defined function"],["GetExpr","An expression that access a named property on an object"],["GroupingExpr","An expression that is delimited by parentheses"],["IfStatement","An if statement lets you conditionally execute statements"],["LogicalExpr","A logical operation"],["PrintStatement","A print statement which outputs text to standard out"],["ReturnStatement","A statement which immediately exits the containing function with a value"],["SetExpr","An expression that sets the value of a named property on an object"],["Statement","Syntax tree of lox statements, the main elements of lox scripts"],["SuperExpr","An expression that acts as a property access on the superclass"],["ThisExpr","An expression that references the value of the instance that was the original owner of the method containing `this`."],["UnaryExpr","A unary operation"],["VarDeclaration","A var declaration defines and optionally initializes a variable binding"],["VarExpr","A variable reference expression"],["WhileStatement","A while loop let you execute a statement multiple times depending on some condition"]]});